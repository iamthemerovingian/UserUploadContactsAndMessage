@model UserUploadContactsAndMessage.Models.UserDetail
     
@{
    ViewBag.Title = "Save";
    UserUploadContactsAndMessage.Models.UserDetailViewModel udViewModel = new UserUploadContactsAndMessage.Models.UserDetailViewModel();
    if(Model!=null)
    {
        udViewModel.Contacts = Model.Contacts;
        udViewModel.Id = Model.Id;
        udViewModel.Message = Model.Message;
        udViewModel.Name = Model.Name;
        //udViewModel.
    }
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Contacts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contacts, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contacts, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.SendDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SendDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SendDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.SendDateTime, DateTime.Now)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    <footer>
        <div>
            @Html.RenderPartial("_Index", )
        </div>
    </footer>
            }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
